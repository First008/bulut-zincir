apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth-1
  namespace: geth
spec:
  serviceName: "geth"
  replicas: 1 # by default is 1
  selector:
    matchLabels:
      app: geth # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: geth # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: geth-node
        image: ethereum/client-go
        ports:
        - containerPort: 8545
        - name: discovery-udp
          containerPort: 30311
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30311
        resources:              # Limitleri belirliyoruz
          requests:
            cpu: "0.25"
            memory: "300Mi"
          limits:
            cpu: ".5"
            memory: "375Mi"
        command: ["/bin/sh", "-c"]
        args:
          [
            "geth --bootnodes $(cat /root/.ethereum/enodelist.txt) --datadir /root/.ethereum/$(NODE_NAME) --syncmode full --port 30311 --http --http.addr 0.0.0.0 --http.port 8545 --http.vhosts '*' --http.api admin,eth,miner,net,txpool,personal,web3,clique --http.corsdomain '*' --networkid $(NETWORK_ID) --ethstats=$(HOSTNAME):$(ETHSTATS_SECRET)@$(ETHSTATS_SVC) --allow-insecure-unlock --unlock `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --password /root/.ethereum/pswd/password.txt --miner.gasprice 0 --miner.etherbase `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --mine"
          ]
        env:                          # Çeşitli enviromental variables
        - name: HOSTNAME
          value: node1
        - name: ETHSTATS_SVC
          value: 10.152.183.131:3000  # Ethstatsın ip:portu
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: eth-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: networkid
        - name: NODE_NAME
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: node1
    

        volumeMounts:               # Volume mountları.
          - mountPath: /root/.ethereum
            name: data2             # data2 persistance volumeun adı. BKNZ: volumes.
          - name: config-genesis
            mountPath: /root/.ethereum/pswd/password.txt
            subPath: password.txt

      
      volumes: 
        - name: config
          hostPath:
            path: /root/.ethereum
        - name: config-genesis      # Configmapten alacağımız bazı config dataları için onu da volume gösteriyoruz.
          configMap:
            name: eth-geth
        - emptyDir: {} # !DEPRECATED
          name: data
        - name: data2
          persistentVolumeClaim:
            claimName: 'geth-pv-claim-dev'  # Persistance volumeu gösteren claimi data2 olarak gösteriyoruz.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth-2
  namespace: geth
spec:
  serviceName: "geth"
  replicas: 1 # by default is 1
  selector:
    matchLabels:
      app: geth # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: geth # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: geth-node
        image: ethereum/client-go
        ports:
        - containerPort: 8546
        - name: discovery-udp
          containerPort: 30312
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30312
        resources:
          requests:
            cpu: "0.25"
            memory: "300Mi"
          limits:
            cpu: ".5"
            memory: "375Mi"
        command: ["/bin/sh"]
        args:
          - "-c"
          - "geth --bootnodes $(cat /root/.ethereum/enodelist.txt) --datadir /root/.ethereum/$(NODE_NAME) --syncmode full --port 30312 --http --http.addr 0.0.0.0 --http.port 8546 --http.vhosts '*' --http.api admin,eth,miner,net,txpool,personal,web3,clique --http.corsdomain '*' --networkid $(NETWORK_ID) --ethstats=$(HOSTNAME):$(ETHSTATS_SECRET)@$(ETHSTATS_SVC) --allow-insecure-unlock --unlock `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --password /root/.ethereum/pswd/password.txt --miner.gasprice 0 --miner.etherbase `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --mine"
          
        env:
        - name: HOSTNAME
          value: node2
        - name: ETHSTATS_SVC
          value: 10.152.183.131:3000
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: eth-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: networkid

        - name: NODE_NAME
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: node2


        volumeMounts:
          - mountPath: /root/.ethereum
            name: data2
          - name: config-genesis
            mountPath: /root/.ethereum/pswd/password.txt
            subPath: password.txt

      
      volumes: 
        - name: config
          hostPath:
            path: /root/.ethereum
        - name: config-genesis
          configMap:
            name: eth-geth
        - emptyDir: {}
          name: data
        - name: data2
          persistentVolumeClaim:
            claimName: 'geth-pv-claim-dev'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth-3
  namespace: geth
spec:
  serviceName: "geth"
  replicas: 1 # by default is 1
  selector:
    matchLabels:
      app: geth # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: geth # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: geth-node
        image: ethereum/client-go
        ports:
        - containerPort: 8547
        - name: discovery-udp
          containerPort: 30313
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30313
        resources:
          requests:
            cpu: "0.25"
            memory: "300Mi"
          limits:
            cpu: ".5"
            memory: "375Mi"
        command: ["/bin/sh"]
        args:
          - "-c"
          - "geth --bootnodes $(cat /root/.ethereum/enodelist.txt) --datadir /root/.ethereum/$(NODE_NAME) --syncmode full --port 30313 --http --http.addr 0.0.0.0 --http.port 8547 --http.vhosts '*' --http.api admin,eth,miner,net,txpool,personal,web3,clique --http.corsdomain '*' --networkid $(NETWORK_ID) --ethstats=$(HOSTNAME):$(ETHSTATS_SECRET)@$(ETHSTATS_SVC) --allow-insecure-unlock --unlock `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --password /root/.ethereum/pswd/password.txt --miner.gasprice 0 --miner.etherbase `cat /root/.ethereum/$(NODE_NAME)/address0x.txt` --mine"
          
        env:
        - name: HOSTNAME
          value: node3
        - name: ETHSTATS_SVC
          value: 10.152.183.131:3000
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: eth-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: networkid
        - name: NODE_NAME
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: node3

        volumeMounts:
          - mountPath: /root/.ethereum
            name: data2
          - name: config-genesis
            mountPath: /root/.ethereum/pswd/password.txt
            subPath: password.txt

      
      volumes: 
        - name: config
          hostPath:
            path: /root/.ethereum
        - name: config-genesis
          configMap:
            name: eth-geth
        - emptyDir: {}
          name: data
        - name: data2
          persistentVolumeClaim:
            claimName: 'geth-pv-claim-dev'
